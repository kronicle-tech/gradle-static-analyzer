plugins {
    id "java-library"
    id "io.freefair.lombok"
}

group "tech.kronicle"
archivesBaseName = "gradle-static-analyzer"
description "A Java library for performing static analysis on a Gradle build script to find out what dependencies it is using"

apply from: "$rootDir/gradle/publish.gradle"

dependencies {
    api "tech.kronicle:kronicle-common:$kronicleVersion"
    api "tech.kronicle:kronicle-sdk:$kronicleVersion"
    api "tech.kronicle:kronicle-utils:$kronicleVersion"
    api "org.slf4j:slf4j-api:$slf4jVersion"
    api "tech.kronicle:gradle-version-logic:$gradleVersionLogicVersion"
    api "io.github.resilience4j:resilience4j-retry:$resilience4jVersion"
    api "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    api "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    // See https://stackoverflow.com/a/43574427
    api "jakarta.xml.bind:jakarta.xml.bind-api:$jakartaXmlBindingVersion"
    api "com.sun.xml.bind:jaxb-impl:$eclipseJaxbVersion"
    api "org.codehaus.groovy:groovy:$groovyVersion"
    api "com.google.guava:guava:$guavaVersion"
    implementation "jakarta.validation:jakarta.validation-api:$jakartaValidationApiVersion"

    testImplementation "tech.kronicle:kronicle-test-utils:$kronicleVersion"
    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testImplementation "org.assertj:assertj-core:$assertJVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
    testImplementation "com.github.tomakehurst:wiremock-jre8:$wireMockVersion"
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    maxParallelForks = Math.min(2, Runtime.runtime.availableProcessors().intdiv(2) ?: 1)
}
